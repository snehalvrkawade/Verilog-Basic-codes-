//==================== DATAFLOW MODEL ====================
/*
module demux1x4(input D, input [1:0] sel, output Y0,Y1,Y2,Y3);
  assign Y0 = (~sel[1] & ~sel[0]) & D;
  assign Y1 = (~sel[1] &  sel[0]) & D;
  assign Y2 = ( sel[1] & ~sel[0]) & D;
  assign Y3 = ( sel[1] &  sel[0]) & D;
endmodule
*/

//==================== BEHAVIORAL MODEL (if-else) ====================
/*
module demux1x4(input D, input [1:0] sel, output reg Y0,Y1,Y2,Y3);
  always @(*) begin
    Y0=0; Y1=0; Y2=0; Y3=0;
    if(sel==2'b00) Y0 = D;
    else if(sel==2'b01) Y1 = D;
    else if(sel==2'b10) Y2 = D;
    else if(sel==2'b11) Y3 = D;
  end
endmodule
*/

//==================== BEHAVIORAL MODEL (case) ====================
module demux1x4(input D, input [1:0] sel, output reg Y0,Y1,Y2,Y3);
  always @(*) begin
    Y0=0; Y1=0; Y2=0; Y3=0;
    case(sel)
      2'b00: Y0 = D;
      2'b01: Y1 = D;
      2'b10: Y2 = D;
      2'b11: Y3 = D;
      default: begin Y0=0; Y1=0; Y2=0; Y3=0; end
    endcase
  end
endmodule

//==================== TESTBENCH ====================
module tb;
  reg D;
  reg [1:0] sel;
  wire Y0,Y1,Y2,Y3;

  demux1x4 dut(.D(D), .sel(sel), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3));

  initial begin
    $dumpfile("demux1x4.vcd");
    $dumpvars(0,tb);
    $monitor("Time=%0t | D=%b | sel=%b | Y0=%b Y1=%b Y2=%b Y3=%b", 
              $time,D,sel,Y0,Y1,Y2,Y3);

    D=1; sel=2'b00; #5;
    sel=2'b01; #5;
    sel=2'b10; #5;
    sel=2'b11; #5;

    D=0; sel=2'b00; #5;
    sel=2'b01; #5;
    $finish;
  end
endmodule
