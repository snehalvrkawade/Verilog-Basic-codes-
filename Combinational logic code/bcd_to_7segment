module bcd_to_7seg(input [3:0] bcd, output reg [6:0] seg);
  always @(*) begin
    case(bcd)
      4'b0000: seg=7'b0000001; // 0
      4'b0001: seg=7'b1001111; // 1
      4'b0010: seg=7'b0010010; // 2
      4'b0011: seg=7'b0000110; // 3
      4'b0100: seg=7'b1001100; // 4
      4'b0101: seg=7'b0100100; // 5
      4'b0110: seg=7'b0100000; // 6
      4'b0111: seg=7'b0001111; // 7
      4'b1000: seg=7'b0000000; // 8
      4'b1001: seg=7'b0000100; // 9
      default: seg=7'b1111111; // blank
    endcase
  end
endmodule

// Testbench
module tb_bcd_7seg;
  reg [3:0] bcd;
  wire [6:0] seg;
  bcd_to_7seg dut(.bcd(bcd), .seg(seg));
  initial begin
    $dumpfile("bcd_7seg.vcd");
    $dumpvars(0,tb_bcd_7seg);
    $monitor("Time=%0t | BCD=%b | 7-Seg=%b", $time,bcd,seg);
    for(bcd=0;bcd<10;bcd=bcd+1) #5;
    $finish;
  end
endmodule
