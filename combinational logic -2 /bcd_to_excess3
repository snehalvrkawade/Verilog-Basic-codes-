// Dataflow
/*
module bcd_to_excess3(input [3:0] bcd, output [3:0] ex3);
  assign ex3 = bcd + 4'b0011;
endmodule
*/

// Behavioral (if-else)
/*
module bcd_to_excess3(input [3:0] bcd, output reg [3:0] ex3);
  always @(*) ex3 = bcd + 4'b0011;
endmodule
*/

// Structural
/*
module bcd_to_excess3(input [3:0] bcd, output [3:0] ex3);
  wire c1,c2,c3;
  // Using full adders
  // bcd + 3 = ex3
  // You can implement using 3 1-bit full adders
endmodule
*/

// Testbench
module tb_bcd_to_ex3;
  reg [3:0] bcd;
  wire [3:0] ex3;
  bcd_to_excess3 dut(.bcd(bcd), .ex3(ex3));
  initial begin
    $dumpfile("bcd_to_ex3.vcd");
    $dumpvars(0,tb_bcd_to_ex3);
    $monitor("Time=%0t | BCD=%b | Excess-3=%b", $time, bcd, ex3);
    for(bcd=0; bcd<10; bcd=bcd+1) #5;
    $finish;
  end
endmodule
