// Dataflow
module and1(input a, b, output y);
  assign y = a & b;
endmodule

// Structural
module and2(input a, b, output y);
  and(y, a, b);
endmodule

// Behavioral
module and3(input a, b, output reg y);
  always @(*) begin
    y = a & b;
  end
endmodule

// Testbench
module tb_and;
  reg a, b;
  wire y;
  and1 dut(.a(a), .b(b), .y(y)); // change to and2 / and3

  initial begin
    $dumpfile("and_gate.vcd");
    $dumpvars(0, tb_and);
    $monitor("Time=%0t | a=%b | b=%b | y=%b", $time, a, b, y);
    a=0; b=0; #5;
    a=0; b=1; #5;
    a=1; b=0; #5;
    a=1; b=1; #5;
    $finish;
  end
endmodule


